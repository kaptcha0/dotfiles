---
- name: Set up Node
  hosts: localhost
  connection: local

  pre_tasks:
    - name: Create temp directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.tmp"
        state: directory
        mode: "755"

    - name: Download the nvm installer
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh
        dest: "{{ ansible_env.HOME }}/.tmp/nvm-installer.sh"
        mode: "777"

    - name: Run the nvm installer
      ansible.builtin.command:
        cmd: "{{ ansible_env.HOME }}/.tmp/nvm-installer.sh"
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Download the pnpm installer
      ansible.builtin.get_url:
        url: https://get.pnpm.io/install.sh
        dest: "{{ ansible_env.HOME }}/.tmp/pnpm-installer.sh"
        mode: "777"

    - name: Run the pnpm installer
      ansible.builtin.command:
        cmd: "{{ ansible_env.HOME }}/.tmp/pnpm-installer.sh"
        creates: "{{ ansible_env.HOME }}/.local/share/pnpm/pnpm"

  tasks:
    - name: Install latest
      ansible.builtin.shell:
        cmd: nvm install node
        executable: /usr/bin/zsh
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node/v20.*"

    - name: Install LTS
      ansible.builtin.shell:
        cmd: nvm install lts/\*
        executable: /usr/bin/zsh
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node/v18.*"

    - name: Use LTS
      changed_when: |
        not (lookup('ansible.builtin.file', lookup('ansible.builtin.env', 'HOME') ~ '/.nvm/alias/default') is match('lts/*'))
      ansible.builtin.shell:
        cmd: nvm alias default lts/\*
        executable: /usr/bin/zsh

  post_tasks:
    - name: Remove the installers
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.tmp"
        state: absent

- name: Set up Python
  hosts: localhost
  connection: local

  pre_tasks:
    - name: Create temp directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.tmp"
        state: directory
        mode: "755"

    - name: Download the pyenv installer
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer
        dest: "{{ ansible_env.HOME }}/.tmp/pnpm-installer.sh"
        mode: "777"

    - name: Run the installer
      ansible.builtin.command:
        cmd: "{{ ansible_env.HOME }}/.tmp/pnpm-installer.sh"
        creates: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv"

  tasks:
    - name: Install 3.11
      ansible.builtin.shell:
        cmd: pyenv install 3.11
        executable: /usr/bin/zsh
        creates: "{{ ansible_env.HOME }}/.pyenv/versions/3.11.*"

    - name: Install 2.7
      ansible.builtin.shell:
        cmd: pyenv install 2.7
        executable: /usr/bin/zsh
        creates: "{{ ansible_env.HOME }}/.pyenv/versions/2.7.*"

    - name: Use 3.11
      ansible.builtin.shell:
        cmd: pyenv global 3.11
        executable: /usr/bin/zsh
        creates: "{{ ansible_env.HOME }}/.pyenv/shims/python3.11"

  post_tasks:
    - name: Remove the installer
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.tmp"
        state: absent
